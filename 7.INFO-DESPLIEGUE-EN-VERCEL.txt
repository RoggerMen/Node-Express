
Resumen

- ¿Qué es Vercel y cómo beneficia al despliegue de APIs?

Vercel es una poderosa plataforma diseñada para facilitar el despliegue y la gestión de aplicaciones. Es especialmente popular en proyectos frontend, pero también permite integrar y desplegar APIs en backend, haciendo posible un flujo de desarrollo más ágil y eficiente. Una de sus mayores ventajas es la capacidad de automatizar el ciclo de integración y despliegue directamente desde el repositorio de código fuente, lo que se traduce en que cualquier cambio en la rama principal del repositorio puede llevar a un nuevo deployment sin necesidad de ejecutar comandos manuales.

- ¿Cómo crear una cuenta en Vercel?

Para comenzar a usar Vercel, necesitarás crear una cuenta. Puedes iniciar sesión o registrarte de las siguientes maneras:

* Con una cuenta existente de GitHub, GitLab o Bitbucket, lo cual es recomendable para integrar directamente con tu repositorio.

*Utilizando un correo electrónico y contraseña.

¿Cómo desplegar una API con Vercel?

1.Login en Vercel: Accede a tu cuenta en Vercel y vincula tu repositorio de GitHub, seleccionando el proyecto que deseas desplegar.

2.Configurar el entorno de trabajo: Vercel requiere que el código productivo resida en la rama principal (main o master). Asegúrate de mover todo el código necesario a esa rama y realizar un merge si es necesario.

git checkout main
git merge rama19

3.Agregar el proyecto: Vercel te permitirá seleccionar el framework correcto para tu proyecto. Aunque está más orientado al frontend, se pueden desplegar aplicaciones backend como aquellas desarrolladas en Express.js.

- ¿Cómo preparar tu proyecto para Vercel?

* Organizar la estructura de archivos: Vercel solicita que las APIs estén dentro de una carpeta específica llamada "/api". Todos los archivos de servicios y middlewares deben moverse allí.

mkdir api
mv index.js api/

* Modificar las rutas en el "package.json": Si has cambiado la ubicación de tus archivos, actualiza las rutas en los scripts de inicio y desarrollo.

* Configuraciones de endpoints: Es necesario prefijar las rutas con "/api" para cumplir con los requisitos de Vercel.

// Rutas previamente configuradas
app.use('/api/v1', productRoutes);

* Leer el puerto desde una variable de entorno, asegurando la buena práctica para adaptarse a múltiples plataformas.

- ¿Cómo configurar "vercel.json"?

Este archivo define cómo Vercel gestionará tu aplicación. Un aspecto crucial es redirigir el tráfico correctamentemente para que funcione como un backend:

{
  "rewrites": [
    {
      "source": "/(.*)",
      "destination": "/api/$1"
    }
  ]
}

- ¿Cómo realizar el despliegue?

Una vez completados los ajustes, solo necesitas hacer commit a la rama principal, ya que Vercel detectará el cambio y gestionará el despliegue automáticamente:

git add .
git commit -m "deploy"
git push origin main

Podrás observar el proceso completo de despliegue desde la consola de Vercel, verificando que todo esté listo y funcionando.

- ¿Qué esperar después del despliegue?

Con tu API ahora en producción, se genera una URL donde esta es accesible. Asegúrate de probar cada endpoint y verificar que todas las funciones respondan adecuadamente. Además, puedes reemplazar el dominio generado por Vercel por uno personalizado para una presentación más profesional.

Con los conocimientos sobre Heroku y Vercel, ya posees herramientas robustas para el despliegue y la administración de tus APIs en producción. ¡Sigue perfeccionando tus habilidades y explorando nuevas tecnologías para mantenerte siempre a la vanguardia!



